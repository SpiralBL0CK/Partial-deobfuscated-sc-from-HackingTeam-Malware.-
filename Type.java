package o;

import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.concurrent.LinkedBlockingQueue;

public final class Type
{
  public static int TAG = -1414676258;
  private int index;
  public long name;
  public Request next;
  private int size;
  public boolean value;
  
  public Type(int paramInt)
  {
    Field localField = get(paramInt);
    type = 1;
    LinkedBlockingQueue localLinkedBlockingQueue;
    if (next == null)
    {
      next = Request.get();
      if (next == null) {}
    }
    else
    {
      localLinkedBlockingQueue = next.this$0;
    }
    try
    {
      localLinkedBlockingQueue.put(localField);
      return;
    }
    catch (Exception localException) {}
  }
  
  public Type(int paramInt, byte[] paramArrayOfByte)
  {
    Field localField = get(4640);
    type = 1;
    key = paramArrayOfByte;
    if (next == null)
    {
      next = Request.get();
      if (next == null) {}
    }
    else
    {
      paramArrayOfByte = next.this$0;
    }
    try
    {
      paramArrayOfByte.put(localField);
      return;
    }
    catch (Exception paramArrayOfByte) {}
  }
  
  private Field get(int paramInt)
  {
    name = Utils.getBytes();
    next = Request.get();
    index = paramInt;
    Field localField = new Field(name);
    name = index;
    return localField;
  }
  
  public final void create(ArrayList paramArrayList)
  {
    int i = 0;
    Object localObject = paramArrayList.iterator();
    while (((Iterator)localObject).hasNext()) {
      i += ((byte[])((Iterator)localObject).next()).length;
    }
    localObject = new byte[i];
    System localSystem = new System((byte[])localObject, 0, i);
    paramArrayList = paramArrayList.iterator();
    while (paramArrayList.hasNext())
    {
      byte[] arrayOfByte = (byte[])paramArrayList.next();
      this$0.put(arrayOfByte);
    }
    get((byte[])localObject);
  }
  
  public final void get(Field paramField)
  {
    if (next == null)
    {
      next = Request.get();
      if (next == null) {
        return;
      }
    }
    LinkedBlockingQueue localLinkedBlockingQueue = next.this$0;
    try
    {
      localLinkedBlockingQueue.put(paramField);
      return;
    }
    catch (Exception paramField) {}
  }
  
  public final void get(byte[] paramArrayOfByte)
  {
    Field localField = new Field(name);
    type = 4;
    id = paramArrayOfByte;
    get(localField);
    value = true;
    size += paramArrayOfByte.length;
  }
}
