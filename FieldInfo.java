package o;

import javax.crypto.Cipher;

public final class FieldInfo
{
  private Data this$0;
  
  public FieldInfo(byte[] paramArrayOfByte)
  {
    try
    {
      paramArrayOfByte = new Data(paramArrayOfByte);
      this$0 = paramArrayOfByte;
      return;
    }
    catch (Exception paramArrayOfByte) {}
  }
  
  public static String getAttribute(String paramString, int paramInt)
  {
    return parseFeed(paramString, paramInt, true);
  }
  
  public static String parseFeed(String paramString, int paramInt, boolean paramBoolean)
  {
    char[] arrayOfChar = paramString.toCharArray();
    int k = paramString.length();
    paramString = new char[64];
    paramString[0] = 95;
    paramString[1] = 66;
    paramString[2] = 113;
    paramString[3] = 119;
    paramString[4] = 72;
    paramString[5] = 97;
    paramString[6] = 70;
    paramString[7] = 56;
    paramString[8] = 84;
    paramString[9] = 107;
    paramString[10] = 75;
    paramString[11] = 68;
    paramString[12] = 77;
    paramString[13] = 102;
    paramString[14] = 79;
    paramString[15] = 122;
    paramString[16] = 81;
    paramString[17] = 65;
    paramString[18] = 83;
    paramString[19] = 120;
    paramString[20] = 52;
    paramString[21] = 86;
    paramString[22] = 117;
    paramString[23] = 88;
    paramString[24] = 100;
    paramString[25] = 90;
    paramString[26] = 105;
    paramString[27] = 98;
    paramString[28] = 85;
    paramString[29] = 73;
    paramString[30] = 101;
    paramString[31] = 121;
    paramString[32] = 108;
    paramString[33] = 74;
    paramString[34] = 87;
    paramString[35] = 104;
    paramString[36] = 106;
    paramString[37] = 48;
    paramString[38] = 109;
    paramString[39] = 53;
    paramString[40] = 111;
    paramString[41] = 50;
    paramString[42] = 69;
    paramString[43] = 114;
    paramString[44] = 76;
    paramString[45] = 116;
    paramString[46] = 54;
    paramString[47] = 118;
    paramString[48] = 71;
    paramString[49] = 82;
    paramString[50] = 78;
    paramString[51] = 57;
    paramString[52] = 115;
    paramString[53] = 89;
    paramString[54] = 49;
    paramString[55] = 110;
    paramString[56] = 51;
    paramString[57] = 80;
    paramString[58] = 112;
    paramString[59] = 99;
    paramString[60] = 55;
    paramString[61] = 103;
    paramString[62] = 45;
    paramString[63] = 67;
    paramString;
    int m = paramString.length;
    int i = paramInt;
    if (paramInt < 0) {
      i = -paramInt;
    }
    if (i > 0) {
      paramInt = i % m;
    } else {
      paramInt = i;
    }
    i = paramInt;
    if (paramInt == 0) {
      i = 1;
    }
    paramInt = 0;
    while (paramInt < k)
    {
      int j = 0;
      while (j < m)
      {
        if (arrayOfChar[paramInt] == paramString[j])
        {
          if (paramBoolean)
          {
            arrayOfChar[paramInt] = paramString[((j + i) % m)];
            break;
          }
          arrayOfChar[paramInt] = paramString[((j + m - i) % m)];
          break;
        }
        j += 1;
      }
      paramInt += 1;
    }
    return new String(arrayOfChar);
  }
  
  public final byte[] update(byte[] paramArrayOfByte)
  {
    int j = paramArrayOfByte.length;
    if (j % 16 == 0) {
      i = 0;
    } else {
      i = 16 - j % 16;
    }
    int i = j + i;
    if (i > 0)
    {
      localObject = new byte[i];
      System.arraycopy(paramArrayOfByte, 0, localObject, 0, j);
      paramArrayOfByte = (byte[])localObject;
    }
    Object localObject = this$0.mac;
    try
    {
      paramArrayOfByte = ((Cipher)localObject).doFinal(paramArrayOfByte);
      return paramArrayOfByte;
    }
    catch (Exception paramArrayOfByte) {}
    return null;
  }
  
  public final byte[] update(byte[] paramArrayOfByte, int paramInt)
  {
    Object localObject = this$0;
    if (paramArrayOfByte.length < 4) {
      return null;
    }
    localObject = cipher;
    int i = paramArrayOfByte.length;
    try
    {
      paramArrayOfByte = ((Cipher)localObject).doFinal(paramArrayOfByte, 4, i - 4);
      localObject = new byte[paramInt];
      System.arraycopy(paramArrayOfByte, 0, localObject, 0, paramInt);
      return localObject;
    }
    catch (Exception paramArrayOfByte) {}
    return null;
  }
}
