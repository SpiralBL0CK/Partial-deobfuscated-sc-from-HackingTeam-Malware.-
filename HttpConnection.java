package o;

public abstract class HttpConnection
  implements Runnable
{
  public long count = 0L;
  protected MathArrays.OrderDirection index;
  private boolean output;
  public boolean start;
  public long value = Long.MAX_VALUE;
  
  public HttpConnection() {}
  
  public void connect()
  {
    try
    {
      output = false;
      set();
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  protected abstract void doInBackground();
  
  public final boolean encode()
  {
    try
    {
      boolean bool = output;
      return bool;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public final boolean equals()
  {
    return (index == MathArrays.OrderDirection.start) || (index == MathArrays.OrderDirection.end);
  }
  
  protected abstract void execute();
  
  public final void flush()
  {
    try
    {
      if (!start)
      {
        start = true;
        notifyAll();
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public void open()
  {
    try
    {
      output = true;
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  protected abstract void read();
  
  /* Error */
  public void run()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getstatic 46	o/MathArrays$OrderDirection:end	Lo/MathArrays$OrderDirection;
    //   6: putfield 39	o/HttpConnection:index	Lo/MathArrays$OrderDirection;
    //   9: aload_0
    //   10: invokevirtual 60	o/HttpConnection:doInBackground	()V
    //   13: aload_0
    //   14: getstatic 43	o/MathArrays$OrderDirection:start	Lo/MathArrays$OrderDirection;
    //   17: putfield 39	o/HttpConnection:index	Lo/MathArrays$OrderDirection;
    //   20: aload_0
    //   21: monitorenter
    //   22: aload_0
    //   23: getfield 50	o/HttpConnection:start	Z
    //   26: ifne +20 -> 46
    //   29: aload_0
    //   30: getfield 24	o/HttpConnection:count	J
    //   33: lconst_0
    //   34: lcmp
    //   35: ifle +11 -> 46
    //   38: aload_0
    //   39: aload_0
    //   40: getfield 24	o/HttpConnection:count	J
    //   43: invokevirtual 64	java/lang/Object:wait	(J)V
    //   46: aload_0
    //   47: monitorexit
    //   48: goto +8 -> 56
    //   51: astore_2
    //   52: aload_0
    //   53: monitorexit
    //   54: aload_2
    //   55: athrow
    //   56: aload_0
    //   57: getfield 50	o/HttpConnection:start	Z
    //   60: istore_1
    //   61: iload_1
    //   62: ifne +48 -> 110
    //   65: aload_0
    //   66: invokevirtual 66	o/HttpConnection:encode	()Z
    //   69: istore_1
    //   70: iload_1
    //   71: ifne +7 -> 78
    //   74: aload_0
    //   75: invokevirtual 68	o/HttpConnection:read	()V
    //   78: aload_0
    //   79: monitorenter
    //   80: aload_0
    //   81: getfield 50	o/HttpConnection:start	Z
    //   84: ifeq +8 -> 92
    //   87: aload_0
    //   88: monitorexit
    //   89: goto +21 -> 110
    //   92: aload_0
    //   93: aload_0
    //   94: getfield 22	o/HttpConnection:value	J
    //   97: invokevirtual 64	java/lang/Object:wait	(J)V
    //   100: aload_0
    //   101: monitorexit
    //   102: goto -46 -> 56
    //   105: astore_2
    //   106: aload_0
    //   107: monitorexit
    //   108: aload_2
    //   109: athrow
    //   110: aload_0
    //   111: iconst_0
    //   112: putfield 50	o/HttpConnection:start	Z
    //   115: aload_0
    //   116: getstatic 71	o/MathArrays$OrderDirection:INCREASING	Lo/MathArrays$OrderDirection;
    //   119: putfield 39	o/HttpConnection:index	Lo/MathArrays$OrderDirection;
    //   122: aload_0
    //   123: invokevirtual 73	o/HttpConnection:execute	()V
    //   126: aload_0
    //   127: getstatic 76	o/MathArrays$OrderDirection:DECREASING	Lo/MathArrays$OrderDirection;
    //   130: putfield 39	o/HttpConnection:index	Lo/MathArrays$OrderDirection;
    //   133: aload_0
    //   134: monitorexit
    //   135: return
    //   136: astore_2
    //   137: aload_0
    //   138: monitorexit
    //   139: aload_2
    //   140: athrow
    //   141: astore_2
    //   142: goto -27 -> 115
    //   145: astore_2
    //   146: goto -36 -> 110
    //   149: astore_2
    //   150: goto -40 -> 110
    //   153: astore_2
    //   154: goto -28 -> 126
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	157	0	this	HttpConnection
    //   60	11	1	bool	boolean
    //   51	4	2	localThrowable1	Throwable
    //   105	4	2	localThrowable2	Throwable
    //   136	4	2	localThrowable3	Throwable
    //   141	1	2	localException1	Exception
    //   145	1	2	localException2	Exception
    //   149	1	2	localException3	Exception
    //   153	1	2	localException4	Exception
    // Exception table:
    //   from	to	target	type
    //   22	46	51	java/lang/Throwable
    //   46	48	51	java/lang/Throwable
    //   52	54	51	java/lang/Throwable
    //   80	89	105	java/lang/Throwable
    //   92	102	105	java/lang/Throwable
    //   106	108	105	java/lang/Throwable
    //   2	9	136	java/lang/Throwable
    //   9	13	136	java/lang/Throwable
    //   13	22	136	java/lang/Throwable
    //   54	56	136	java/lang/Throwable
    //   56	61	136	java/lang/Throwable
    //   65	70	136	java/lang/Throwable
    //   74	78	136	java/lang/Throwable
    //   78	80	136	java/lang/Throwable
    //   108	110	136	java/lang/Throwable
    //   110	115	136	java/lang/Throwable
    //   122	126	136	java/lang/Throwable
    //   126	135	136	java/lang/Throwable
    //   9	13	141	java/lang/Exception
    //   54	56	145	java/lang/Exception
    //   65	70	145	java/lang/Exception
    //   74	78	145	java/lang/Exception
    //   108	110	149	java/lang/Exception
    //   122	126	153	java/lang/Exception
  }
  
  public final void set()
  {
    try
    {
      if (!start) {
        notifyAll();
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
}
