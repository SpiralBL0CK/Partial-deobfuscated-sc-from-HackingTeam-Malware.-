package o;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;
import org.json.JSONObject;

public abstract class Item
{
  public String name;
  public final JSONObject this$0;
  
  public Item(String paramString, JSONObject paramJSONObject)
  {
    this$0 = paramJSONObject;
    name = paramString;
  }
  
  public final String get(String paramString1, String paramString2)
  {
    try
    {
      paramString1 = getString(paramString1);
      return paramString1;
    }
    catch (JSONException paramString1) {}
    return paramString2;
  }
  
  public final Date get(String paramString)
  {
    try
    {
      paramString = parse(paramString);
      return paramString;
    }
    catch (Exception paramString)
    {
      for (;;) {}
    }
    return null;
  }
  
  public final Integer getData(String paramString)
  {
    Object localObject = null;
    JSONObject localJSONObject = this$0;
    try
    {
      paramString = localJSONObject.getJSONObject(paramString);
      return new Integer(paramString);
    }
    catch (org.json.JSONException paramString)
    {
      for (;;)
      {
        paramString = localObject;
      }
    }
  }
  
  public final int getInt(String paramString)
  {
    JSONObject localJSONObject = this$0;
    try
    {
      int i = localJSONObject.getInt(paramString);
      return i;
    }
    catch (org.json.JSONException paramString)
    {
      for (;;) {}
    }
    throw new JSONException();
  }
  
  public final String getString(String paramString)
  {
    JSONObject localJSONObject = this$0;
    try
    {
      paramString = localJSONObject.getString(paramString);
      return paramString;
    }
    catch (org.json.JSONException paramString)
    {
      for (;;) {}
    }
    throw new JSONException();
  }
  
  public final String getTag(String paramString)
  {
    JSONObject localJSONObject = this$0;
    try
    {
      paramString = localJSONObject.getString(paramString);
      return paramString;
    }
    catch (org.json.JSONException paramString)
    {
      for (;;) {}
    }
    return null;
  }
  
  public final Date parse(String paramString)
  {
    Object localObject = this$0;
    try
    {
      paramString = ((JSONObject)localObject).get(paramString);
      localObject = (String)paramString;
      paramString = (String)localObject;
    }
    catch (org.json.JSONException paramString)
    {
      for (;;) {}
    }
    throw new JSONException();
    if (((String)localObject).length() == 18) {
      paramString = ((String)localObject).substring(0, 11) + "0" + ((String)localObject).substring(11);
    }
    if ("0000-00-00 00:00:00".equals(paramString)) {
      return new Date(Long.MAX_VALUE);
    }
    try
    {
      localObject = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
      ((DateFormat)localObject).setTimeZone(TimeZone.getTimeZone("UTC"));
      paramString = ((DateFormat)localObject).parse(paramString);
      return paramString;
    }
    catch (ParseException paramString)
    {
      for (;;) {}
    }
    throw new JSONException();
  }
  
  public final double put(String paramString)
  {
    JSONObject localJSONObject = this$0;
    try
    {
      double d = localJSONObject.getDouble(paramString);
      return d;
    }
    catch (org.json.JSONException paramString)
    {
      for (;;) {}
    }
    throw new JSONException();
  }
  
  public final boolean set(String paramString)
  {
    JSONObject localJSONObject = this$0;
    try
    {
      boolean bool = localJSONObject.getBoolean(paramString);
      return bool;
    }
    catch (Exception paramString)
    {
      for (;;) {}
    }
    return false;
  }
  
  public String toString()
  {
    return this$0.toString();
  }
  
  public final boolean toString(String paramString)
  {
    JSONObject localJSONObject = this$0;
    try
    {
      boolean bool = localJSONObject.getBoolean(paramString);
      return bool;
    }
    catch (org.json.JSONException paramString)
    {
      for (;;) {}
    }
    throw new JSONException();
  }
}
