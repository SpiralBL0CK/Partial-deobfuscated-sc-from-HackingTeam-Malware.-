package o;

import android.content.ContentResolver;
import android.content.Context;
import android.os.Handler;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;

public class AUX
{
  public static boolean ?;
  private static HashMap<String, ?> ?;
  private static HashMap<Integer, ?> ?;
  private static HashMap<Integer, Con> ?;
  private static Object ?;
  private static PowerManager.WakeLock ?;
  private static volatile AUX ?;
  public static boolean ? = false;
  private static Context ?;
  public static boolean ??;
  private static ? ??;
  private static boolean ?;
  private static Handler ? = new Handler();
  private static boolean[] ?;
  private static ArrayList<?>[] ? = new ArrayList[2];
  private static Object[] ?;
  public static int ?;
  private static boolean ?;
  private static boolean ?;
  public static boolean ?;
  private static ? ?;
  private boolean ?;
  
  static
  {
    ? = new Object();
    ? = false;
    ? = new boolean[6];
    ? = false;
    ? = false;
    ? = new Object[2];
  }
  
  private AUX()
  {
    ? = new HashMap();
    ? = new HashMap();
    ? = new HashMap();
    int i = 0;
    while (i < 2)
    {
      ?[i] = new Object();
      ?[i] = new ArrayList();
      i += 1;
    }
  }
  
  public static ContentResolver ?()
  {
    return ?.getContentResolver();
  }
  
  public static Handler ?()
  {
    return ?;
  }
  
  public static int ?()
  {
    return ?.size();
  }
  
  public static int ?()
  {
    return ?.size();
  }
  
  public static void ?()
  {
    int i = 0;
    for (;;)
    {
      if (i < 2)
      {
        ArrayList localArrayList = ?[i];
        Object localObject1 = ?[i];
        try
        {
          localArrayList.clear();
        }
        finally {}
      }
      try
      {
        try
        {
          localObject2.notifyAll();
        }
        finally {}
        i += 1;
        continue;
        return;
      }
      catch (Exception localException)
      {
        for (;;) {}
      }
    }
  }
  
  public static boolean ?()
  {
    return ?;
  }
  
  public static boolean ?()
  {
    return ?;
  }
  
  public static ScheduledExecutorService ?()
  {
    return Executors.newScheduledThreadPool(1);
  }
  
  private static boolean ?()
  {
    synchronized (?)
    {
      boolean bool = ?;
      return bool;
    }
  }
  
  public static ? ?()
  {
    return ?;
  }
  
  /* Error */
  public static void ?(int paramInt)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: getstatic 54	o/AUX:?	Ljava/lang/Object;
    //   6: astore_1
    //   7: aload_1
    //   8: monitorenter
    //   9: getstatic 58	o/AUX:?	[Z
    //   12: iload_0
    //   13: iconst_1
    //   14: bastore
    //   15: aload_1
    //   16: monitorexit
    //   17: ldc 2
    //   19: monitorexit
    //   20: return
    //   21: astore_2
    //   22: aload_1
    //   23: monitorexit
    //   24: aload_2
    //   25: athrow
    //   26: astore_1
    //   27: ldc 2
    //   29: monitorexit
    //   30: aload_1
    //   31: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	32	0	paramInt	int
    //   26	5	1	localObject2	Object
    //   21	4	2	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   9	17	21	finally
    //   22	24	21	finally
    //   3	9	26	finally
    //   17	20	26	finally
    //   24	26	26	finally
  }
  
  public static ? ?()
  {
    return ??;
  }
  
  public static Context ??()
  {
    return ?;
  }
  
  public static ?[] ??(int paramInt)
  {
    ArrayList localArrayList = ?[paramInt];
    try
    {
      synchronized (?[paramInt])
      {
        if (localArrayList.size() == 0) {
          ???.wait();
        }
      }
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    try
    {
      int i = localArrayList.size();
      ?[] arrayOf? = new ?[i];
      paramInt = 0;
      while (paramInt < i)
      {
        arrayOf?[paramInt] = ((?)localArrayList.get(paramInt));
        paramInt += 1;
      }
      return arrayOf?;
    }
    finally {}
  }
  
  public static HashMap<String, ?> ??()
  {
    return ?;
  }
  
  public static void ?()
  {
    synchronized (?)
    {
      ? = true;
      return;
    }
  }
  
  public static boolean ?()
  {
    for (;;)
    {
      synchronized (?)
      {
        if ((?()) && (?[3] != 0))
        {
          bool = true;
          return bool;
        }
      }
      boolean bool = false;
    }
  }
  
  public static HashMap<Integer, ?> ?()
  {
    return ?;
  }
  
  public static void ?()
  {
    synchronized (?)
    {
      ? = false;
      return;
    }
  }
  
  public static ? ?(int paramInt)
  {
    if (!?.containsKey(Integer.valueOf(paramInt))) {
      throw new aUx(paramInt + " not found");
    }
    ? local? = (?)?.get(Integer.valueOf(paramInt));
    if (local? == null) {
      throw new aUx(paramInt + " is null");
    }
    return local?;
  }
  
  public static void ?()
  {
    ?.clear();
    ?.clear();
    ?.clear();
    ?? = null;
    ?? = false;
  }
  
  /* Error */
  public static void ?(Con paramCon)
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 185	o/Con:??	I
    //   4: istore_1
    //   5: getstatic 49	o/AUX:?	[Ljava/util/ArrayList;
    //   8: iload_1
    //   9: aaload
    //   10: astore_3
    //   11: getstatic 64	o/AUX:?	[Ljava/lang/Object;
    //   14: iload_1
    //   15: aaload
    //   16: astore_2
    //   17: new 128	o/?
    //   20: dup
    //   21: aload_0
    //   22: getfield 187	o/Con:?	I
    //   25: aconst_null
    //   26: invokespecial 190	o/?:<init>	(ILo/?;)V
    //   29: astore_0
    //   30: aload_3
    //   31: monitorenter
    //   32: aload_3
    //   33: aload_0
    //   34: invokevirtual 193	java/util/ArrayList:contains	(Ljava/lang/Object;)Z
    //   37: ifeq +9 -> 46
    //   40: aload_3
    //   41: aload_0
    //   42: invokevirtual 196	java/util/ArrayList:remove	(Ljava/lang/Object;)Z
    //   45: pop
    //   46: aload_3
    //   47: monitorexit
    //   48: goto +8 -> 56
    //   51: astore_0
    //   52: aload_3
    //   53: monitorexit
    //   54: aload_0
    //   55: athrow
    //   56: aload_2
    //   57: monitorenter
    //   58: aload_2
    //   59: invokevirtual 103	java/lang/Object:notifyAll	()V
    //   62: aload_2
    //   63: monitorexit
    //   64: return
    //   65: astore_0
    //   66: aload_2
    //   67: monitorexit
    //   68: aload_0
    //   69: athrow
    //   70: astore_0
    //   71: goto -9 -> 62
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	74	0	paramCon	Con
    //   4	11	1	i	int
    //   16	51	2	localObject	Object
    //   10	43	3	localArrayList	ArrayList
    // Exception table:
    //   from	to	target	type
    //   32	46	51	finally
    //   46	48	51	finally
    //   52	54	51	finally
    //   58	62	65	finally
    //   62	64	65	finally
    //   66	68	65	finally
    //   58	62	70	java/lang/Exception
  }
  
  public static void ?(boolean paramBoolean)
  {
    ? = paramBoolean;
  }
  
  public static boolean ?()
  {
    for (;;)
    {
      synchronized (?)
      {
        if ((?()) && (?[1] != 0))
        {
          bool = true;
          return bool;
        }
      }
      boolean bool = false;
    }
  }
  
  public static boolean ?()
  {
    for (;;)
    {
      synchronized (?)
      {
        if ((?()) && (?[5] != 0))
        {
          bool = true;
          return bool;
        }
      }
      boolean bool = false;
    }
  }
  
  public static AUX ?()
  {
    if (? == null) {
      try
      {
        if (? == null) {
          ? = new AUX();
        }
      }
      finally {}
    }
    return ?;
  }
  
  public static Con ?(int paramInt)
  {
    if (!?.containsKey(Integer.valueOf(paramInt))) {
      throw new aUx(paramInt + " not found");
    }
    Con localCon = (Con)?.get(Integer.valueOf(paramInt));
    if (localCon == null) {
      throw new aUx(paramInt + " is null");
    }
    return localCon;
  }
  
  /* Error */
  public static void ?(int paramInt, ? param?)
  {
    // Byte code:
    //   0: getstatic 81	o/AUX:?	Ljava/util/HashMap;
    //   3: new 141	java/lang/Integer
    //   6: dup
    //   7: iload_0
    //   8: invokespecial 204	java/lang/Integer:<init>	(I)V
    //   11: invokevirtual 173	java/util/HashMap:get	(Ljava/lang/Object;)Ljava/lang/Object;
    //   14: checkcast 183	o/Con
    //   17: getfield 185	o/Con:??	I
    //   20: istore_2
    //   21: getstatic 49	o/AUX:?	[Ljava/util/ArrayList;
    //   24: iload_2
    //   25: aaload
    //   26: astore 4
    //   28: getstatic 64	o/AUX:?	[Ljava/lang/Object;
    //   31: iload_2
    //   32: aaload
    //   33: astore_3
    //   34: new 128	o/?
    //   37: dup
    //   38: iload_0
    //   39: aload_1
    //   40: invokespecial 190	o/?:<init>	(ILo/?;)V
    //   43: astore 5
    //   45: aload 4
    //   47: monitorenter
    //   48: aload 4
    //   50: aload 5
    //   52: invokevirtual 193	java/util/ArrayList:contains	(Ljava/lang/Object;)Z
    //   55: ifne +18 -> 73
    //   58: aload 4
    //   60: new 128	o/?
    //   63: dup
    //   64: iload_0
    //   65: aload_1
    //   66: invokespecial 190	o/?:<init>	(ILo/?;)V
    //   69: invokevirtual 207	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   72: pop
    //   73: aload 4
    //   75: monitorexit
    //   76: goto +9 -> 85
    //   79: astore_1
    //   80: aload 4
    //   82: monitorexit
    //   83: aload_1
    //   84: athrow
    //   85: aload_3
    //   86: monitorenter
    //   87: aload_3
    //   88: invokevirtual 103	java/lang/Object:notifyAll	()V
    //   91: aload_3
    //   92: monitorexit
    //   93: return
    //   94: astore_1
    //   95: aload_3
    //   96: monitorexit
    //   97: aload_1
    //   98: athrow
    //   99: astore_1
    //   100: goto -9 -> 91
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	103	0	paramInt	int
    //   0	103	1	param?	?
    //   20	12	2	i	int
    //   33	63	3	localObject	Object
    //   26	55	4	localArrayList	ArrayList
    //   43	8	5	local?	?
    // Exception table:
    //   from	to	target	type
    //   48	73	79	finally
    //   73	76	79	finally
    //   80	83	79	finally
    //   87	91	94	finally
    //   91	93	94	finally
    //   95	97	94	finally
    //   87	91	99	java/lang/Exception
  }
  
  public static void ?(Context paramContext)
  {
    ? = paramContext;
    ? = ((PowerManager)paramContext.getSystemService("power")).newWakeLock(1, "T");
  }
  
  public static void ?(Con paramCon)
  {
    ?.put(Integer.valueOf(?), paramCon);
  }
  
  public static void ?(? param?)
  {
    ?.containsKey(??);
    ?.put(??, param?);
  }
  
  public static void ?(? param?)
  {
    ?? = param?;
  }
  
  public static void ?(? param?)
  {
    Context localContext = param?.getApplicationContext();
    ? = localContext;
    ? = ((PowerManager)localContext.getSystemService("power")).newWakeLock(1, "T");
    ? = param?;
  }
  
  public static void ?(boolean paramBoolean)
  {
    ? = paramBoolean;
  }
  
  public static boolean ?(? param?)
  {
    ?.containsKey(Integer.valueOf(?));
    ?.put(Integer.valueOf(?), param?);
    return true;
  }
  
  public static void ?()
  {
    if (? != null) {
      ?.acquire(1000L);
    }
  }
  
  public final void ??(boolean paramBoolean)
  {
    try
    {
      ? = paramBoolean;
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public final boolean ?()
  {
    try
    {
      boolean bool = ?;
      return bool;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public final void ?(String paramString)
  {
    if (if.?) {}
    try
    {
      new Handler(?.getMainLooper()).post(new ?(this, paramString));
      return;
    }
    catch (Exception paramString) {}
    return;
  }
}
