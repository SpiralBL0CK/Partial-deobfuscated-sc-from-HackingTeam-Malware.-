package o;

public abstract class con
  implements Runnable
{
  private boolean ?;
  protected ? ?;
  public boolean ??;
  public long ? = 0L;
  public long ? = Long.MAX_VALUE;
  
  public con() {}
  
  /* Error */
  public void run()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getstatic 32	o/?:?	Lo/?;
    //   6: putfield 34	o/con:?	Lo/?;
    //   9: aload_0
    //   10: invokevirtual 36	o/con:?	()V
    //   13: aload_0
    //   14: getstatic 38	o/?:?	Lo/?;
    //   17: putfield 34	o/con:?	Lo/?;
    //   20: aload_0
    //   21: monitorenter
    //   22: aload_0
    //   23: getfield 40	o/con:??	Z
    //   26: ifne +20 -> 46
    //   29: aload_0
    //   30: getfield 24	o/con:?	J
    //   33: lconst_0
    //   34: lcmp
    //   35: ifle +11 -> 46
    //   38: aload_0
    //   39: aload_0
    //   40: getfield 24	o/con:?	J
    //   43: invokevirtual 44	java/lang/Object:wait	(J)V
    //   46: aload_0
    //   47: monitorexit
    //   48: goto +8 -> 56
    //   51: astore_1
    //   52: aload_0
    //   53: monitorexit
    //   54: aload_1
    //   55: athrow
    //   56: aload_0
    //   57: getfield 40	o/con:??	Z
    //   60: ifne +46 -> 106
    //   63: aload_0
    //   64: invokevirtual 48	o/con:??	()Z
    //   67: ifne +7 -> 74
    //   70: aload_0
    //   71: invokevirtual 50	o/con:?	()V
    //   74: aload_0
    //   75: monitorenter
    //   76: aload_0
    //   77: getfield 40	o/con:??	Z
    //   80: ifeq +8 -> 88
    //   83: aload_0
    //   84: monitorexit
    //   85: goto +21 -> 106
    //   88: aload_0
    //   89: aload_0
    //   90: getfield 22	o/con:?	J
    //   93: invokevirtual 44	java/lang/Object:wait	(J)V
    //   96: aload_0
    //   97: monitorexit
    //   98: goto -42 -> 56
    //   101: astore_1
    //   102: aload_0
    //   103: monitorexit
    //   104: aload_1
    //   105: athrow
    //   106: aload_0
    //   107: iconst_0
    //   108: putfield 40	o/con:??	Z
    //   111: aload_0
    //   112: getstatic 52	o/?:??	Lo/?;
    //   115: putfield 34	o/con:?	Lo/?;
    //   118: aload_0
    //   119: invokevirtual 54	o/con:??	()V
    //   122: aload_0
    //   123: getstatic 55	o/?:?	Lo/?;
    //   126: putfield 34	o/con:?	Lo/?;
    //   129: aload_0
    //   130: monitorexit
    //   131: return
    //   132: astore_1
    //   133: aload_0
    //   134: monitorexit
    //   135: aload_1
    //   136: athrow
    //   137: astore_1
    //   138: goto -27 -> 111
    //   141: astore_1
    //   142: goto -36 -> 106
    //   145: astore_1
    //   146: goto -24 -> 122
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	149	0	this	con
    //   51	4	1	localObject1	Object
    //   101	4	1	localObject2	Object
    //   132	4	1	localObject3	Object
    //   137	1	1	localException1	Exception
    //   141	1	1	localException2	Exception
    //   145	1	1	localException3	Exception
    // Exception table:
    //   from	to	target	type
    //   22	46	51	finally
    //   46	48	51	finally
    //   52	54	51	finally
    //   76	85	101	finally
    //   88	98	101	finally
    //   102	104	101	finally
    //   2	9	132	finally
    //   9	20	132	finally
    //   20	22	132	finally
    //   54	56	132	finally
    //   56	74	132	finally
    //   74	76	132	finally
    //   104	106	132	finally
    //   106	111	132	finally
    //   111	122	132	finally
    //   122	131	132	finally
    //   9	20	137	java/lang/Exception
    //   106	111	137	java/lang/Exception
    //   20	22	141	java/lang/Exception
    //   54	56	141	java/lang/Exception
    //   56	74	141	java/lang/Exception
    //   74	76	141	java/lang/Exception
    //   104	106	141	java/lang/Exception
    //   111	122	145	java/lang/Exception
  }
  
  public final void ?()
  {
    try
    {
      if (!??)
      {
        ?? = true;
        notifyAll();
      }
      return;
    }
    finally {}
  }
  
  public final boolean ?()
  {
    return (? == ?.?) || (? == ?.?);
  }
  
  public void ?()
  {
    try
    {
      ? = true;
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public void ?()
  {
    try
    {
      ? = false;
      ?();
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public final void ?()
  {
    try
    {
      if (!??) {
        notifyAll();
      }
      return;
    }
    finally {}
  }
  
  protected abstract void ??();
  
  public final boolean ??()
  {
    try
    {
      boolean bool = ?;
      return bool;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  protected abstract void ?();
  
  protected abstract void ?();
}
