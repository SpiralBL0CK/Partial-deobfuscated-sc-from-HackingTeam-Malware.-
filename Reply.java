package o;

import android.database.Cursor;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.zip.InflaterInputStream;

public final class Reply
  extends AsyncTask
{
  private boolean comment = false;
  private String date;
  private String fileName = "_id > ";
  public int id;
  private String[] mValues = { "_id", "fromAddress", "toAddresses", "ccAddresses", "bccAddresses", "bodyCompressed", "dateSentMs", "subject", "snippet", "bodyEmbedsExternalResources", "joinedAttachmentInfos" };
  private Segment name;
  private String text;
  private Call this$0;
  
  public Reply(Call paramCall, String paramString, Segment paramSegment)
  {
    this$0 = paramCall;
    text = paramString.substring(10, paramString.length() - 3);
    date = paramString;
    name = paramSegment;
  }
  
  private static String read(byte[] paramArrayOfByte)
  {
    paramArrayOfByte = new InflaterInputStream(new ByteArrayInputStream(paramArrayOfByte, 0, paramArrayOfByte.length));
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    byte[] arrayOfByte = new byte['?'];
    for (;;)
    {
      int i = paramArrayOfByte.read(arrayOfByte, 0, 1024);
      if (i == -1) {
        break;
      }
      localByteArrayOutputStream.write(arrayOfByte, 0, i);
    }
    paramArrayOfByte.close();
    localByteArrayOutputStream.close();
    return new String(localByteArrayOutputStream.toByteArray(), "UTF-8");
  }
  
  public final long doInBackground(Cursor paramCursor)
  {
    if (!comment) {
      comment = true;
    }
    int i = paramCursor.getInt(0);
    String str2 = paramCursor.getString(1);
    String str3 = paramCursor.getString(2);
    String str4 = paramCursor.getString(3);
    paramCursor.getString(4);
    byte[] arrayOfByte = paramCursor.getBlob(5);
    Date localDate = new Date(paramCursor.getLong(6));
    String str5 = paramCursor.getString(7);
    String str1 = paramCursor.getString(8);
    paramCursor = str1;
    Object localObject = paramCursor;
    if (arrayOfByte != null) {}
    try
    {
      localObject = read(arrayOfByte);
      boolean bool;
      if (!str2.contains(text)) {
        bool = true;
      } else {
        bool = false;
      }
      paramCursor = new R.string(bool, localDate, str2, str3, str4, (String)localObject, str1, str5);
      this$0.doInBackground(paramCursor);
      this$0.add(date, i, false);
      return i;
    }
    catch (IOException localIOException)
    {
      for (;;)
      {
        Cursor localCursor = paramCursor;
      }
    }
  }
  
  public final boolean get()
  {
    return this$0.start;
  }
  
  public final String getData()
  {
    String str2 = fileName + id;
    String str1 = str2;
    if (name.value) {
      str1 = str2 + " and dateSentMs > " + name.type.getTime();
    }
    return str1;
  }
  
  public final String[] getValues()
  {
    return mValues;
  }
}
