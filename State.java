package o;

import android.app.ActivityManager.RunningAppProcessInfo;
import java.nio.ByteBuffer;
import java.util.ArrayList;

public class State
  extends ?
  implements ?, ?<??>
{
  private Type index;
  
  public State() {}
  
  private int get(AnyObjectId paramAnyObjectId)
  {
    Object localObject = this$0;
    paramAnyObjectId = name;
    String str1 = processName;
    String str2 = processName;
    byte[] arrayOfByte = new Connection().load();
    localObject = new ArrayList();
    ((ArrayList)localObject).add(arrayOfByte);
    ((ArrayList)localObject).add(Logger.get(str1, true));
    ((ArrayList)localObject).add(Logger.get(paramAnyObjectId.name(), true));
    ((ArrayList)localObject).add(Logger.get(str2, true));
    int i = Type.TAG;
    paramAnyObjectId = new byte[4];
    System04this$0.putInt(i);
    ((ArrayList)localObject).add(paramAnyObjectId);
    try
    {
      index.create((ArrayList)localObject);
    }
    catch (Throwable paramAnyObjectId)
    {
      throw paramAnyObjectId;
    }
    return 0;
  }
  
  public final void doInBackground()
  {
    index = new Type(4113);
    Event.newInstance().add(this);
  }
  
  public final void execute()
  {
    Event.newInstance().update(this);
    Type localType = index;
    Field localField = new Field(name);
    type = 5;
    localType.get(localField);
  }
  
  public final boolean execute(Integer paramInteger)
  {
    return true;
  }
  
  public final void get()
  {
    try
    {
      if (index.value)
      {
        Type localType = index;
        Field localField = new Field(name);
        type = 5;
        localType.get(localField);
        index = new Type(4113);
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public final void read() {}
}
