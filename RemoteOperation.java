package o;

public final class RemoteOperation
  extends ?
  implements ?<??>
{
  private String TAG;
  private boolean mAccount;
  private boolean mContext;
  private boolean result = false;
  
  public RemoteOperation() {}
  
  private static boolean execute(String paramString1, String paramString2)
  {
    String str2 = paramString1;
    String str1 = paramString2;
    if (paramString2 == null) {
      return paramString1 == null;
    }
    for (;;)
    {
      if (str2.length() == 0) {
        return str1.length() == 0;
      }
      if (str2.charAt(0) == '*')
      {
        str2 = str2.substring(1);
        if (str2.length() == 0) {
          return true;
        }
        if ((str2.charAt(0) != '?') && (str2.charAt(0) != '*'))
        {
          int j = str1.length();
          i = 0;
          paramString1 = str1;
          while (i < j)
          {
            int k = paramString1.charAt(0);
            paramString2 = paramString1.substring(1);
            paramString1 = paramString2;
            str1 = str2.substring(1);
            if ((k == str2.charAt(0)) && (execute(str1, paramString2))) {
              return true;
            }
            i += 1;
          }
          return false;
        }
        int i = 0;
        paramString1 = str1;
        while (i < paramString1.length())
        {
          paramString2 = paramString1.substring(1);
          paramString1 = paramString2;
          if (execute(str2, paramString2)) {
            return true;
          }
          i += 1;
        }
        return false;
      }
      if (str1.length() == 0) {
        return false;
      }
      if ((str2.charAt(0) != '?') && (str2.charAt(0) != str1.charAt(0))) {
        return false;
      }
      str1 = str1.substring(1);
      str2 = str2.substring(1);
    }
  }
  
  public final void doInBackground()
  {
    Event.newInstance().add(this);
  }
  
  public final void execute()
  {
    Event.newInstance().update(this);
    parse();
  }
  
  public final boolean execute(Track paramTrack)
  {
    try
    {
      boolean bool = paramTrack.toString("window");
      mAccount = bool;
      bool = paramTrack.toString("focus");
      mContext = bool;
      paramTrack = paramTrack.getString("process");
      TAG = paramTrack;
    }
    catch (JSONException paramTrack)
    {
      for (;;) {}
    }
    return false;
    return true;
  }
  
  public final void read() {}
}
